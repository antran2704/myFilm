{"ast":null,"code":"var _jsxFileName = \"E:\\\\sourceCode\\\\myFilm\\\\film\\\\src\\\\components\\\\Content\\\\Content.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useViewport } from \"../../hook\";\nimport * as type from \"../../store/action\";\nimport Modal from \"../Modal/Modal\";\nimport \"./Content.scss\";\nimport ContentItem from \"./ContentItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  const dispath = useDispatch();\n  const {\n    MoviePage,\n    MovieDetail\n  } = useSelector(state => state.movie);\n  useEffect(() => {\n    dispath(type.getMoviePage(1));\n  }, [dispath]);\n  console.log(MoviePage);\n  const [isModal, setIsModal] = useState(false);\n  const [width] = useViewport();\n\n  function handleModal() {\n    setIsModal(!isModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    style: width > 1200 ? {\n      gridTemplateColumns: \"repeat(5,auto)\"\n    } : width > 1000 ? {\n      gridTemplateColumns: \"repeat(4,auto)\"\n    } : width > 760 ? {\n      gridTemplateColumns: \"repeat(3,auto)\"\n    } : width > 600 ? {\n      gridTemplateColumns: \"repeat(2,auto)\"\n    } : {\n      gridTemplateColumns: \"repeat(1,auto)\"\n    },\n    children: [MoviePage && MoviePage.map(function (data, index) {\n      return /*#__PURE__*/_jsxDEV(ContentItem, {\n        onClick: handleModal,\n        data: data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      data: MovieDetail,\n      show: isModal,\n      onClick: handleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"r/6csfWUIv412JAZR1sP/EIuaxE=\", false, function () {\n  return [useDispatch, useSelector, useViewport];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useViewport","type","Modal","ContentItem","Content","dispath","MoviePage","MovieDetail","state","movie","getMoviePage","console","log","isModal","setIsModal","width","handleModal","gridTemplateColumns","map","data","index"],"sources":["E:/sourceCode/myFilm/film/src/components/Content/Content.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useViewport } from \"../../hook\";\r\nimport * as type from \"../../store/action\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./Content.scss\";\r\nimport ContentItem from \"./ContentItem\";\r\n\r\nfunction Content() {\r\n  const dispath = useDispatch()\r\n  const {MoviePage,MovieDetail} = useSelector((state) => state.movie)\r\n  useEffect(() => {\r\n    dispath(type.getMoviePage(1))\r\n  },[dispath])\r\n  \r\n  console.log(MoviePage)\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [width] = useViewport();\r\n  function handleModal() {\r\n    setIsModal(!isModal);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"content\"\r\n      style={\r\n          width > 1200\r\n          ? { gridTemplateColumns: \"repeat(5,auto)\" }\r\n          : width > 1000\r\n          ? { gridTemplateColumns: \"repeat(4,auto)\" }\r\n          : width > 760\r\n          ? { gridTemplateColumns: \"repeat(3,auto)\" }\r\n          : width > 600\r\n          ? { gridTemplateColumns: \"repeat(2,auto)\" }\r\n          : { gridTemplateColumns: \"repeat(1,auto)\" }\r\n      }\r\n    >\r\n      {MoviePage && MoviePage.map(function(data,index) {\r\n        return <ContentItem key={index} onClick={handleModal} data = {data}/>\r\n      })}\r\n      \r\n      <Modal data = {MovieDetail} show={isModal} onClick={handleModal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAMC,OAAO,GAAGP,WAAW,EAA3B;EACA,MAAM;IAACQ,SAAD;IAAWC;EAAX,IAA0BR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA3C;EACAb,SAAS,CAAC,MAAM;IACdS,OAAO,CAACJ,IAAI,CAACS,YAAL,CAAkB,CAAlB,CAAD,CAAP;EACD,CAFQ,EAEP,CAACL,OAAD,CAFO,CAAT;EAIAM,OAAO,CAACC,GAAR,CAAYN,SAAZ;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACkB,KAAD,IAAUf,WAAW,EAA3B;;EACA,SAASgB,WAAT,GAAuB;IACrBF,UAAU,CAAC,CAACD,OAAF,CAAV;EACD;;EACD,oBACE;IACE,SAAS,EAAC,SADZ;IAEE,KAAK,EACDE,KAAK,GAAG,IAAR,GACE;MAAEE,mBAAmB,EAAE;IAAvB,CADF,GAEEF,KAAK,GAAG,IAAR,GACA;MAAEE,mBAAmB,EAAE;IAAvB,CADA,GAEAF,KAAK,GAAG,GAAR,GACA;MAAEE,mBAAmB,EAAE;IAAvB,CADA,GAEAF,KAAK,GAAG,GAAR,GACA;MAAEE,mBAAmB,EAAE;IAAvB,CADA,GAEA;MAAEA,mBAAmB,EAAE;IAAvB,CAXR;IAAA,WAcGX,SAAS,IAAIA,SAAS,CAACY,GAAV,CAAc,UAASC,IAAT,EAAcC,KAAd,EAAqB;MAC/C,oBAAO,QAAC,WAAD;QAAyB,OAAO,EAAEJ,WAAlC;QAA+C,IAAI,EAAIG;MAAvD,GAAkBC,KAAlB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFa,CAdhB,eAkBE,QAAC,KAAD;MAAO,IAAI,EAAIb,WAAf;MAA4B,IAAI,EAAEM,OAAlC;MAA2C,OAAO,EAAEG;IAApD;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAnCQZ,O;UACSN,W,EACgBC,W,EAOhBC,W;;;KATTI,O;AAqCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}