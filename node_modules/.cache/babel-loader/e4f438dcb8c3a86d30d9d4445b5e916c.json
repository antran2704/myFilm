{"ast":null,"code":"var _jsxFileName = \"E:\\\\sourceCode\\\\myFilm\\\\film\\\\src\\\\components\\\\Pages\\\\Search\\\\Search.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./Search.scss\";\nimport SearchItem from \"./SearchItem\";\nimport { useViewport } from \"../../../hook\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiOutlineLoading } from \"react-icons/ai\";\nimport * as types from \"../../../store/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useQuery = () => {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n};\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nfunction Search() {\n  _s2();\n\n  const [loading, setLoading] = useState(true);\n  const dispath = useDispatch();\n  const keywords = useQuery().get(\"keywords\");\n  const [width] = useViewport();\n  const {\n    SearchMovie\n  } = useSelector(state => state.movie);\n  const movie = [SearchMovie];\n  const Search = keywords.normalize(\"NFD\").replace(/ /g, \"-\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/đ/g, \"d\").replace(/Đ/g, \"D\");\n  useEffect(() => {\n    const handler = setTimeout(async () => {\n      setLoading(true);\n      await dispath(types.searchMovie(Search.trim()));\n      setLoading(false);\n    }, 800);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [Search]);\n  console.log(Search);\n  console.log(SearchMovie);\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    style: width > 1200 ? {\n      gridTemplateColumns: \"repeat(5,auto)\"\n    } : width > 1000 ? {\n      gridTemplateColumns: \"repeat(4,auto)\"\n    } : width > 760 ? {\n      gridTemplateColumns: \"repeat(3,auto)\"\n    } : width > 600 ? {\n      gridTemplateColumns: \"repeat(2,auto)\"\n    } : {\n      gridTemplateColumns: \"repeat(1,auto)\"\n    },\n    children: [SearchMovie && movie.map(function (data, index) {\n      return /*#__PURE__*/_jsxDEV(SearchItem, {\n        data: data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this);\n    }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_loading\",\n      children: /*#__PURE__*/_jsxDEV(AiOutlineLoading, {\n        className: \"search_loading-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Search, \"/yXMK2QGM+KFuJ7lPa7rSJ14CoQ=\", false, function () {\n  return [useDispatch, useQuery, useViewport, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["SearchItem","useViewport","useLocation","useEffect","useState","useDispatch","useSelector","AiOutlineLoading","types","useQuery","URLSearchParams","search","Search","loading","setLoading","dispath","keywords","get","width","SearchMovie","state","movie","normalize","replace","handler","setTimeout","searchMovie","trim","clearTimeout","console","log","gridTemplateColumns","map","data","index"],"sources":["E:/sourceCode/myFilm/film/src/components/Pages/Search/Search.jsx"],"sourcesContent":["import \"./Search.scss\";\r\nimport SearchItem from \"./SearchItem\";\r\nimport { useViewport } from \"../../../hook\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AiOutlineLoading } from \"react-icons/ai\";\r\nimport * as types from \"../../../store/action\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nfunction Search() {\r\n  const [loading, setLoading] = useState(true);\r\n  const dispath = useDispatch();\r\n  const keywords = useQuery().get(\"keywords\");\r\n  const [width] = useViewport();\r\n  const { SearchMovie } = useSelector((state) => state.movie);\r\n  const movie = [SearchMovie];\r\n  const Search = keywords\r\n    .normalize(\"NFD\")\r\n    .replace(/ /g, \"-\")\r\n    .replace(/[\\u0300-\\u036f]/g, \"\")\r\n    .replace(/đ/g, \"d\")\r\n    .replace(/Đ/g, \"D\");\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(async () => {\r\n      setLoading(true);\r\n      await dispath(types.searchMovie(Search.trim()));\r\n      setLoading(false);\r\n    }, 800);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [Search]);\r\n  console.log(Search);\r\n  console.log(SearchMovie);\r\n  console.log(movie)\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={\r\n        width > 1200\r\n          ? { gridTemplateColumns: \"repeat(5,auto)\" }\r\n          : width > 1000\r\n          ? { gridTemplateColumns: \"repeat(4,auto)\" }\r\n          : width > 760\r\n          ? { gridTemplateColumns: \"repeat(3,auto)\" }\r\n          : width > 600\r\n          ? { gridTemplateColumns: \"repeat(2,auto)\" }\r\n          : { gridTemplateColumns: \"repeat(1,auto)\" }\r\n      }\r\n    >\r\n      {SearchMovie &&\r\n        movie.map(function (data, index) {\r\n            return (<SearchItem key={index} data={data} />)\r\n        })}\r\n\r\n      {loading && (\r\n        <div className=\"search_loading\">\r\n          <AiOutlineLoading className=\"search_loading-icon\" />\r\n        </div>\r\n      )}\r\n      <Modal data={data}/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}